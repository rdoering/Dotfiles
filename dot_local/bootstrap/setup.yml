---
- name: Machine setup
  hosts: localhost
  #become: true
  gather_facts: true

  vars:
    ansible_become_timeout: 10
    packages:
      common:
        - git
        - htop
        - btop
        - vim
        - ripgrep
        - zsh
        - fzf
        - tmux
        - unzip
        - rclone
        - restic
        - sysbench
        - gh          # github integration
        - yazi        # cli file brower
        - git-delta   # for beauty git diff
        - zoxide      # cd replacement
        - atuin       # shell history
        - fd          # faster find
      debian:
        - git
      darwin:
        - git

  tasks:
    - name: Install Homebrew (non-root)
      block:
        - name: Create Homebrew directory
          file:
            path: "{{ ansible_env.HOME }}/.linuxbrew"
            state: directory
            mode: '0755'

        - name: Download Homebrew install script
          get_url:
            url: https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh
            dest: /tmp/homebrew-install.sh
            mode: '0755'

        - name: Install Homebrew
          shell: |
            NONINTERACTIVE=1 /bin/bash /tmp/homebrew-install.sh
          environment:
            HOME: "{{ ansible_env.HOME }}"
          args:
            creates: "{{ ansible_env.HOME }}/.linuxbrew/bin/brew"

        - name: Add Homebrew to PATH in .bashrc
          lineinfile:
            path: "{{ ansible_env.HOME }}/.bashrc"
            line: 'eval "$({{ ansible_env.HOME }}/.linuxbrew/bin/brew shellenv)"'
            state: present

        - name: Clean up install script
          file:
            path: /tmp/homebrew-install.sh
            state: absent

    - name: Get my user
      ansible.builtin.set_fact:
        remote_regular_user: "{{ ansible_env.get('SUDO_USER', ansible_user_id) }}"

    - name: Install packages (macOS)
      community.general.homebrew:
        name: "{{ packages.common + packages.darwin }}"
        state: present
      when: ansible_facts['os_family'] == "Darwin"
      become: false

    - name: Install packages (Ubuntu)
      ansible.builtin.homebrew:
        name: "{{ packages.common + packages.debian }}"
        state: present
      when: ansible_facts['os_family'] == "Debian"
      become: false

    - name: Set zsh path fact
      ansible.builtin.set_fact:
        zsh_path: "{{ '/usr/local/bin/zsh' if ansible_facts['os_family'] == 'Darwin' else '/usr/bin/zsh' }}"

    - name: Change shell to zsh
      ansible.builtin.user:
        name: "{{ remote_regular_user }}"
        shell: "{{ zsh_path }}"

    - name: Ensure fonts directory
      ansible.builtin.file:
        path: "{{ '~/Library/Fonts' if ansible_facts['os_family'] == 'Darwin' else '~' + remote_regular_user + '/.fonts' }}"
        state: directory
        mode: "0755"
        owner: "{{ remote_regular_user }}"

    - name: Check if Jetbrains Mono exists
      ansible.builtin.stat:
        path: "{{ '~/Library/Fonts/JetBrainsMonoNerdFontMono' if ansible_facts['os_family'] == 'Darwin' else '~' + remote_regular_user + '/.fonts/JetBrainsMonoNerdFontMono' }}"
      register: jetbrains_mono_exists

    - name: Download Jetbrains mono
      when: not jetbrains_mono_exists.stat.exists  # Fixed the logic here
      ansible.builtin.unarchive:
        src: https://github.com/ryanoasis/nerd-fonts/releases/download/v3.1.1/JetBrainsMono.zip
        dest: "{{ '~/Library/Fonts' if ansible_facts['os_family'] == 'Darwin' else '~' + remote_regular_user + '/.fonts/' }}"
        remote_src: true
        mode: "0755"
        owner: "{{ remote_regular_user }}"
